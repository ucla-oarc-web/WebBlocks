<h2>Customizing Components</h2>

<p>The WebBlocks compiler allows you to specify in <code>Rakefile-config.rb</code> what should be packaged into a particular build of the toolkit:</p>

<ul>
    <li><code>Modules</code> contain definitions for WebBlocks elements</li>
    <li><code>Adapters</code> bind WebBlocks to existing frameworks</li>
    <li><code>Extensions</code> make tweaks to WebBlocks definitions</li>
    <li><code>Packages</code> are third-party components packaged with WebBlocks</li>
</ul>

<p>The default values of these, as well as how to customize them, is explained below. For a deeper understanding of what these components do, see <a href="#Core/Architecture/Terminology">Development/Architecture/Terminology</a>.</p>

<h4>Modules</h4>

<p>By default, all modules are included in the WebBlocks compile:</p>

<pre class="prettyprint">WebBlocks.config[:src][:modules] = :all</pre>

<p>However, besides the <code>:all</code> keyword, <code>WebBlocks.config[:src][:modules]</code> may also be an array of individual modules and/or namespaces of modules:</p>

<pre class="prettyprint">WebBlocks.config[:src][:modules] = []
WebBlocks.config[:src][:modules] << 'base'
WebBlocks.config[:src][:modules] << 'entity/form'</pre>

<p>This example would include all modules within the <code>Base</code> namespace (such as <code>Base/Color</code> and <code>Base/Structure</code>), as well as the <code>Entity/Form</code> module. It should be noted that, if a module has dependencies, these dependencies will also be included.</p>

<h4>Adapters</h4>

<p>By default, the <code>bootstrap</code> adapter is compiled with WebBlocks:</p>

<pre class="prettyprint">WebBlocks.config[:src][:adapter] = 'bootstrap'</pre>

<p>While adapters provide a binding between WebBlocks and another framework, and they take advantage of framework definitions to implement the WebBlocks semantics, WebBlocks may be compiled without an adapter:</p>

<pre class="prettyprint">WebBlocks.config[:src][:adapter] = false</pre>

<p>While WebBlocks currently only provides a <code>bootstrap</code> adapter, other custom adapters may also be used. See <a href="#Core/Architecture/Adapter">Creating an Adapter</a> for more information. This configuration setting, in addition to accepting a string name for an adapter, also supports using multiple adapters:</p>

<pre class="prettyprint">WebBlocks.config[:src][:adapter] = ['bootstrap','custom']</pre>

<h4>Extensions</h4>

<p>By default, no extensions are compiled with WebBlocks:</p>

<pre class="prettyprint">WebBlocks.config[:src][:extensions] = false</pre>

<p>WebBlocks does include an <code>implicit-html</code> extension which binds semantics like <code>table.table</code> directly to <code>table</code> so that the class is not required to style a <code>table</code>. This may be included as:</p>

<pre class="prettyprint">WebBlocks.config[:src][:extensions] = 'implicit-html'</pre>

<p>This configuration setting, in addition to accepting a string name for an extension, also supports using multiple extensions:</p>

<pre class="prettyprint">WebBlocks.config[:src][:extensions] = ['implicit-html','custom']</pre>

<h4>Packages</h4>

<p>By default, several packages are compiled with WebBlocks:</p>

<pre class="prettyprint">WebBlocks.config[:build][:packages] = [
    :jquery,
    :modernizr,
    :respond,
    :selectivizr,
    :efx
  ]</pre>

<p>A package can be removed as:</p>

<pre class="prettyprint">WebBlocks.config[:build][:packages].delete :jquery</pre>

<p>This is useful, for example, if jQuery is already being included in another <code>script</code> tag in the application where WebBlocks will be used.</p>

<p>An additional package can be added as:</p>

<pre class="prettyprint">WebBlocks.config[:build][:packages] << :lettering</pre>

<p>The package set compiled with WebBlocks can also be completely redefined such as:</p>

<pre class="prettyprint">WebBlocks.config[:build][:packages] = []
WebBlocks.config[:build][:packages] << :modernizr
WebBlocks.config[:build][:packages] << :respond
WebBlocks.config[:build][:packages] << :selectivizr</pre>
