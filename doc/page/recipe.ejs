<h2>Recipes</h2>

<p>This section of the WebBlocks documentation is intended to provide common recipes for working with WebBlocks.</p>

<p>Three articles are provided regarding integrating WebBlocks into an application:</p>

<ul>
    <li><strong><a href="#Recipe/Integration/Use">Use Directly</a></strong> WebBlocks is designed to be plug-and-play but also customizable. This article starts by showing how easy it is to drop WebBlocks into an application, and then it explains how one may configure WebBlocks directly for a use case.</li>
    <li><strong><a href="#Recipe/Integration/Fork">Use as a Fork</a></strong> WebBlocks is built with extensibility and federation in mind. This article starts by discussing how to create a fork of WebBlocks for development, and then it explores strategies that one may use for building their own fork of WebBlocks for use throughout an organization.</li>
    <li><strong><a href="#Recipe/Integration/Submodule">Use as a Submodule</a></strong> It often makes sense to tie WebBlocks directly into an application's build process. Rather than creating a fork and maintaining two repositories, this article explores strategies for using WebBlocks as a submodule. This allows one to maintain their WebBlocks sources within the application and yet compile with WebBlocks.</li>
</ul>

<p>The rest of the recipes in this section explore patterns of use for WebBlocks elements:</p>

<ul>
    <li><strong><a href="#Recipe/Layout/Page">Recipe/Layout/Page</a></strong> The grid system within WebBlocks provides powerful mechanisms for controlling the way content collapses responsively. This set of recipes shows how one may arrange rows and panels for common two-column and three-column layouts with particular collapse behaviors.</li>
    <li><strong><a href="#Recipe/Layout/Content">Arranging Content</a></strong> The grid system includes collapse controls to control when the panels in a row collapse. Using nested rows with different collapse controls, this set of recipes demonstrates some common content collapse arrangement patterns.</li>
    <li><strong><a href="#Recipe/Element/Color">Color Anything</a></strong> WebBlocks provides a consistent and robust color implementation. Any brand or mood color can be applied in any context (some with special behaviors suited to the particular context), and changing the base color for a brand or mood influences the presentation of this color throughout. This set of recipes highlights both the general cases as well as particular cases with non-default behavior.</li>
</ul>
